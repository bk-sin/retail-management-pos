services:
  db:
    image: postgres:16-alpine
    container_name: retail_management_pos_db
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}"
    networks:
      - prisma-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 2s
      retries: 20
    security_opt:
      - no-new-privileges:true
    volumes:
      - db_data:/var/lib/postgresql/data
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: api
    container_name: retail_management_pos_api
    restart: on-failure
    security_opt:
      - no-new-privileges:true
    env_file:
      - .env
    ports:
      - "${BACKEND_PORT:-4000}:${BACKEND_PORT:-4000}"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - prisma-network
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  prisma-studio:
    image: node:20-alpine
    container_name: retail_management_pos_prisma_studio
    working_dir: /app
    volumes:
      - ./:/app
    command: sh -c "npx prisma studio --schema ./packages/database/prisma/schema.prisma --port 5555 --browser none"
    ports:
      - "5555:5555"
    env_file:
      - .env
    security_opt:
      - no-new-privileges:true
    networks:
      - prisma-network
    depends_on:
      db:
        condition: service_healthy
      api:
        condition: service_started

  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: web
    container_name: retail_management_pos_web
    restart: on-failure
    security_opt:
      - no-new-privileges:true
    env_file:
      - .env
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    depends_on:
      api:
        condition: service_started
    networks:
      - prisma-network
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  backup:
    image: alpine:3.20
    container_name: retail_management_pos_backup
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./backups:/backups
      - ./entrypoint-backups.sh:/entrypoint-backups.sh:ro
    networks:
      - prisma-network
    entrypoint: ["/bin/sh", "/entrypoint-backups.sh"]
    logging:
      options:
        max-size: "10m"
        max-file: "3"

networks:
  prisma-network:

volumes:
  db_data:
  backup_data:
